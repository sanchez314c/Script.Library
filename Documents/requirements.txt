# Documents Processing Suite - Dependencies
# =======================================
# Professional document processing tools with multi-core optimization
# Author: sanchez314c@speedheathens.com
# Version: 1.0.0
# Updated: 2025-01-23

# Core PDF Processing
PyPDF2>=3.0.0                  # Advanced PDF manipulation and analysis
reportlab>=3.6.0               # PDF generation and formatting

# Document Conversion
weasyprint>=56.0               # HTML to PDF conversion with CSS support
python-docx>=0.8.11            # Microsoft Word document processing

# Image Processing  
Pillow>=8.0.0                  # Image conversion and manipulation
  
# Natural Language Processing (Optional but Recommended)
nltk>=3.7                      # Text analysis and content processing

# GUI Framework (Built-in with Python)
# tkinter - Native GUI dialogs and progress windows

# System Integration (Built-in with Python)  
# pathlib - Modern path handling
# multiprocessing - Multi-core processing
# concurrent.futures - Thread pool execution
# subprocess - System command execution
# hashlib - File integrity verification
# json - Report generation and data serialization
# time - Performance timing and timestamps
# logging - Comprehensive error tracking
# argparse - Command-line interface

# Installation Notes:
# ==================
# 
# Quick Install:
# pip install -r requirements.txt
#
# Individual Installation:
# pip install PyPDF2 weasyprint python-docx Pillow reportlab nltk
#
# macOS Specific Notes:
# - All scripts include auto-dependency installation
# - Native file dialogs use built-in tkinter
# - Desktop logging enabled by default
# - Optimized for Apple Silicon and Intel processors
#
# Performance Recommendations:
# - Install on SSD for optimal processing speed
# - Ensure minimum 4GB RAM for large document processing
# - Multi-core CPUs significantly improve batch operations
#
# Security Notes:
# - All processing performed locally
# - No external network dependencies during operation
# - Temporary files automatically cleaned up
# - File permissions respected throughout processing
#
# Troubleshooting:
# - If weasyprint installation fails, install system dependencies:
#   brew install cairo pango gdk-pixbuf libffi
# - For NLTK data download issues, run manually:
#   python -c "import nltk; nltk.download('punkt'); nltk.download('stopwords')"
# - On permission errors, ensure proper file access rights
#
# Version Compatibility:
# - Python 3.8+ required
# - Tested on macOS 11+ (Big Sur, Monterey, Ventura, Sonoma)
# - Compatible with Apple Silicon (M1/M2) and Intel processors
#
# Optional Dependencies for Enhanced Features:
# matplotlib>=3.5.0             # Advanced visualization in reports
# pandas>=1.3.0                 # Data analysis and CSV export
# beautifulsoup4>=4.10.0        # Enhanced HTML processing
# lxml>=4.6.0                   # XML/HTML parsing optimization